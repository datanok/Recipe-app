{"version":3,"sources":["Recipe.js","App.js","reportWebVitals.js","index.js","recipe.module.css"],"names":["Recipe","title","calories","image","ingredients","orecipe","className","style","recipe","src","alt","map","ingredient","text","color","Math","floor","href","btn","App","useState","recipes","setRecipes","search","setSearch","query","setQuery","useEffect","getRecipes","a","fetch","response","json","data","hits","onSubmit","e","preventDefault","type","value","onChange","target","placeholder","label","url","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById","module","exports"],"mappings":"gQAwBeA,EApBA,SAAC,GAAoD,IAAnDC,EAAkD,EAAlDA,MAAOC,EAA2C,EAA3CA,SAAUC,EAAiC,EAAjCA,MAAOC,EAA0B,EAA1BA,YAAaC,EAAa,EAAbA,QAClD,OACI,sBAAKC,UAAWC,IAAMC,OAAtB,UACI,qBAAKF,UAAWC,IAAMJ,MAAOM,IAAKN,EAAOO,IAAI,yBAC7C,6BAAKT,IACL,6BACKG,EAAYO,KAAI,SAAAC,GAAU,OACvB,6BAAKA,EAAWC,YAGxB,uBAAMP,UAAU,WAAhB,uBAAqC,cAAC,IAAD,CAAQQ,MAAM,YAAW,8BAAIC,KAAKC,MAAOd,GAAhB,cAC9D,mBAAGe,KAAMZ,EAASC,UAAWC,IAAMW,IAAnC,6BC4CGC,G,MAtDH,WAEV,IAFgB,EAKcC,mBAAS,IALvB,mBAKTC,EALS,KAKAC,EALA,OAMaF,mBAAS,IANtB,mBAMTG,EANS,KAMDC,EANC,OAOUJ,mBAAS,WAPnB,mBAOTK,EAPS,KAOFC,EAPE,KAUhBC,qBAAU,WACRC,MACC,CAACH,IAEJ,IAAMG,EAAU,uCAAG,8BAAAC,EAAA,sEACMC,MAAM,mCAAD,OAAoCL,EAApC,mBAbf,WAae,oBAZd,qCAWG,cACXM,EADW,gBAEEA,EAASC,OAFX,OAEXC,EAFW,OAGjBX,EAAWW,EAAKC,MAHC,2CAAH,qDAkBhB,OACE,sBAAK5B,UAAU,MAAf,UACE,uBAAM6B,SARQ,SAAAC,GAChBA,EAAEC,iBACFX,EAASH,GACTC,EAAU,KAKmBlB,UAAU,cAArC,UACE,uBAAOA,UAAU,aAAagC,KAAK,OAAOC,MAAOhB,EAAQiB,SAd1C,SAAAJ,GACnBZ,EAAUY,EAAEK,OAAOF,QAakEG,YAAY,eAC7F,wBAAQpC,UAAU,gBAAgBgC,KAAK,SAAvC,SAAgD,cAAC,IAAD,CAAUxB,MAAM,eAElE,qBAAKR,UAAU,UAAf,SACCe,EAAQV,KAAI,SAAAH,GAAM,OACjB,cAAC,EAAD,CAEAP,MAAOO,EAAOA,OAAOmC,MAAOzC,SAAUM,EAAOA,OAAON,SACpDC,MAAOK,EAAOA,OAAOL,MACrBC,YAAaI,EAAOA,OAAOJ,YAC3BC,QAAWG,EAAOA,OAAOoC,KAJpBpC,EAAOA,OAAOmC,iBClCZE,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,K,kBCfAc,EAAOC,QAAU,CAAC,OAAS,uBAAuB,MAAQ,sBAAsB,SAAW,yBAAyB,IAAM,uB","file":"static/js/main.6e2577a2.chunk.js","sourcesContent":["import React from 'react';\r\nimport style from './recipe.module.css';\r\nimport { FaFire } from \"react-icons/fa\";\r\n\r\nconst Recipe = ({title, calories, image, ingredients, orecipe}) => {\r\n    return(\r\n        <div className={style.recipe}>\r\n            <img className={style.image} src={image} alt=\"not loading for some\"/>\r\n            <h1>{title}</h1>\r\n            <ul>\r\n                {ingredients.map(ingredient => (\r\n                    <li>{ingredient.text}</li>\r\n                ))}\r\n            </ul>\r\n            <span className=\"calories\">Calories: <FaFire color=\"#E75E5D\"/><p>{Math.floor( calories )} kcal</p></span>\r\n            <a href={orecipe} className={style.btn}>Let's Cook!</a>\r\n            \r\n        </div>\r\n        \r\n        \r\n        \r\n    );\r\n}\r\n\r\nexport default Recipe;","import React,{useEffect,useState} from 'react';\nimport Recipe from './Recipe';\nimport { FaSearch } from \"react-icons/fa\";\nimport './App.css';\n\nconst App = () => {\n\n  const APP_ID = '050195d2';\n  const APP_KEY = 'a90346e8a5d3216b1b611af1ca133ea8';\n\n  const [recipes, setRecipes] = useState([]);  \n  const [search, setSearch] =  useState(\"\");\n  const [query, setQuery] = useState(\"chicken\")\n\n\n  useEffect(() => {\n    getRecipes();\n  }, [query]);\n\n  const getRecipes = async () =>{\n    const response = await fetch(`https://api.edamam.com/search?q=${query}&app_id=${APP_ID}&app_key=${APP_KEY}`);\n    const data = await response.json();\n    setRecipes(data.hits);\n    \n  }\n\n  const updateSearch = e => {\n    setSearch(e.target.value);\n    \n  };\n  \n  const getSearch = e =>{\n    e.preventDefault();\n    setQuery(search);\n    setSearch('');\n  };\n\n  return(\n    <div className=\"App\">\n      <form onSubmit={getSearch} className=\"search-form\">\n        <input className=\"search-bar\" type=\"text\" value={search} onChange={updateSearch} placeholder=\"Enter Food\"/>\n        <button className=\"search-button\" type=\"submit\"><FaSearch color=\"white\"/></button>\n      </form>\n      <div className=\"recipes\">\n      {recipes.map(recipe => (\n        <Recipe\n        key={recipe.recipe.label}\n        title={recipe.recipe.label} calories={recipe.recipe.calories}\n        image={recipe.recipe.image}\n        ingredients={recipe.recipe.ingredients}\n        orecipe = {recipe.recipe.url}\n        />\n      ))}\n      </div>\n    </div>\n\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"recipe\":\"recipe_recipe__OgoFC\",\"image\":\"recipe_image__3s3B0\",\"calories\":\"recipe_calories__3wJeH\",\"btn\":\"recipe_btn__2Fjbk\"};"],"sourceRoot":""}